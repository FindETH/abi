import { fromHex, toHex } from '../utils';
import { decodeTuple, encodeTuple, getTypes } from './tuple';

describe('getTypes', () => {
  it('returns the type of a tuple', () => {
    expect(getTypes('(foo, bar)')).toStrictEqual(['foo', 'bar']);
    expect(getTypes('(foo,bar)')).toStrictEqual(['foo', 'bar']);
  });
});

describe('encodeTuple', () => {
  it('encodes a tuple', () => {
    expect(toHex(encodeTuple(new Uint8Array(0), ['foo', 'bar'], '(string, string)'))).toBe(
      '000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000003666f6f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000036261720000000000000000000000000000000000000000000000000000000000'
    );
  });
});

describe('decodeTuple', () => {
  it('decodes a tuple', () => {
    const value = fromHex(
      '000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000003666f6f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000036261720000000000000000000000000000000000000000000000000000000000'
    );

    expect(decodeTuple(value, value, '(string, string)')).toStrictEqual(['foo', 'bar']);
  });
});
